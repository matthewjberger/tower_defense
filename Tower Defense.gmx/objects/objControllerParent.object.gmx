<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Ini vars

// wave variables
path = null;
waves = 0;
enemies = 0;
start = false;
canSpawn = true;
currentRoom = 1;

// health and money vars
playerHp = 0;
money = 0;


// tower cost vars
towerOneCost = 100;
towerTwoCost = 150;

// tower menu vars
towerOnePicked = false;
towerTwoPicked = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Select Tower From Menu

if (mouse_check_button_pressed(mb_left))
{
    if (mouse_y &gt;= room_height - 64 &amp;&amp; mouse_y &lt;= room_height - 32)
    {
        if (mouse_x &gt;= 32 &amp;&amp; mouse_x &lt;= 64)
            if (! towerTwoPicked)
                towerOnePicked = true;
            
        if (mouse_x &gt;= 96 &amp;&amp; mouse_x &lt;= 128)
            if (! towerOnePicked)
                towerTwoPicked = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check player health

if (playerHp &lt;= 0)
{
    show_message("Game over! D:");
    game_restart();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Upgrade Tower

var towerid;

if (mouse_check_button_pressed(mb_left))
{
    towerid = collision_point(mouse_x, mouse_y, objTowerParent, true, true);
    if (towerid)
    {
        if (towerid.object_index == objTowerOne)
        {
            if (towerid.level &lt; 2)
                if (money &gt;= 50)
                {
                    towerid.level = 2;
                    money -= 50;
                }
        }
        else if (towerid.object_index == objTowerTwo)
        {
            if (towerid.level &lt; 2)
                if (money &gt;= 100)
                {
                    towerid.level = 2;
                    money -= 100;
                }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Sell Tower

var towerid;

if (mouse_check_button_pressed(mb_right))
{
    towerid = collision_point(mouse_x, mouse_y, objTowerParent, true, true);
    if (towerid)
    {
        if (towerid.object_index == objTowerOne)
        {
            if (towerid.level &lt; 2)
            {
                money += 75;
                with (towerid)
                    instance_destroy();
            }
            else if (towerid.level == 2)
            {
                money += round(50 * 0.75);
                towerid.level = 1;
            }
        }
        else if (towerid.object_index == objTowerTwo)
        {
            if (towerid.level &lt; 2)
            {
                money += 100;
                with (towerid)
                    instance_destroy();
            }
            else if (towerid.level == 2)
            {
                money += round(30 * 0.75);
                towerid.level = 1;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Place Tower at Mouse Position

if (mouse_check_button_pressed(mb_left))
{
    if (towerOnePicked) 
    {
        placeTower(towerOnePicked, towerOneCost, objTowerOne);
        towerOnePicked = false;
    }

    if (towerTwoPicked)
    {
        placeTower(towerTwoPicked, towerTwoCost, objTowerTwo);
        towerTwoPicked = false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw health and money

draw_set_halign(fa_left);

draw_text_colour(0, 32, "Money: " + string(money), c_green, c_green, c_green, c_green, 1);

for (var i = 0; i &lt; playerHp; i++)
{
    draw_sprite(sprPlayerHp, 0, i * 32, 0);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Tower Carried

if (towerOnePicked)
{
    draw_sprite_ext(sprTowerOne, 0, mouse_x, mouse_y, 1, 1, 0, c_white, 0.5);
    draw_circle(mouse_x, mouse_y, 100, c_red);
}

if (towerTwoPicked)
{
    draw_sprite_ext(sprTowerTwo, 0, mouse_x, mouse_y, 1, 1, 0, c_white, 0.5);
    draw_circle(mouse_x, mouse_y, 50, c_red);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Tower Selection Menu

draw_rectangle_colour(0, room_height - 96, room_width, room_height, c_black, c_black,
                      c_black, c_black, c_black);
                      
draw_sprite(sprTowerOne, 0, 48, room_height - 48);

draw_sprite(sprTowerTwo, 0, 112, room_height - 48);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Highlight Selected Tower

if (mouse_y &gt;= room_height - 64 &amp;&amp; mouse_y &lt;= room_height - 32)
{
    if (mouse_x &gt;= 32 &amp;&amp; mouse_x &lt;= 64)
        draw_roundrect_colour(30, room_height - 66, 65, room_height - 31, c_white, c_blue, true);
            
    if (mouse_x &gt;= 96 &amp;&amp; mouse_x &lt;= 128)
        draw_roundrect_colour(94, room_height - 66, 129, room_height - 31, c_white, c_blue, true);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
